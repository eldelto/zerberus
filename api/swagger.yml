swagger: "2.0"
info:
  description: "This is the public API of the Zerberus authorization server."
  version: "0.1.0"
  title: "Zerberus"
  termsOfService: "TBD"
  contact:
    email: "eldelto77@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "TBD"
basePath: "/v1"
tags:
- name: "OAuth2"
  description: "OAuth2 related endpoints"
schemes:
- "http"

securityDefinitions:
  BasicAuth:
    type: "basic"

paths:
  /authorize:
    get:
      tags:
      - "OAuth2"
      summary: "Authorization endpoint"
      description: "Entrypoint for most OAuth2 flows (currently only the code grant flow is supported)."
      operationId: "authorize"
      parameters:
      - in: "query"
        name: "response_type"
        type: "string"
        description: "The expected response type (currently only code is supported)."
        required: true
      - in: "query"
        name: "client_id"
        type: "string"
        description: "The unique identifier of the client that has been registered with the auth server."
        required: true
      - in: "query"
        name: "redirect_uri"
        type: "string"
        description: "The URI the client will be redirected to after a successful authorization (has to bee the same URI that has been registered with the auth server)."
        required: true
      - in: "query"
        name: "scope"
        type: "string"
        description: "Comma-separated list of scopes the client wants to request."
      - in: "query"
        name: "state"
        type: "string"
        description: "Opage value that will be returned unmodified after the redirect."
        required: true
      produces:
      - "text/html"
      responses:
        "200":
          description: "The authorization page"
  /token:
    post:
      tags:
      - "OAuth2"
      summary: "Token endpoint"
      description: "Endpoint to exchange an authorization code for an access token."
      operationId: "token"
      security:
      - basicAuth: []
      consumes:
      - "application/x-www-form-urlencoded" 
      parameters:
      - in: "query"
        name: "grant_type"
        type: "string"
        description: "The requested grant type (currently only authorization_code is supported)."
        required: true
      - in: "query"
        name: "code"
        type: "string"
        description: "The authorization code that has been obtained from the authorization server."
        required: true
      - in: "query"
        name: "redirect_uri"
        type: "string"
        description: "The URI the client will be redirected to after a successful authorization (has to bee the same URI that has been registered with the auth server)."
        required: true
      produces:
      - "application/json"
      responses:
        "200":
          description: "Successful token response."
          schema:
            type: "object"
            properties:
              access_token:
                type: "string"
                description: "The generated access token."
                example: "123-123-123-123"
              token_type:
                type: "string"
                description: "The type of the returned token."
                example: "Bearer"
              expires_in:
                type: "integer"
                description: "The lifetime of the token in seconds."
                example: 3600
              refresh_token:
                type: "string"
                description: "The optional refresh token."
                example: "456-456-456-456"
            required:
            - "access_token"
            - "token_type"
            - "expires_in"
  
